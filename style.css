document.addEventListener("DOMContentLoaded", () => {
  // --- Tab Navigation ---
  const tabs = document.querySelectorAll(".tab-button");
  const contents = document.querySelectorAll(".tab-content");

  tabs.forEach(tab => {
    tab.addEventListener("click", () => {
      contents.forEach(c => c.classList.remove("active"));
      tabs.forEach(t => t.classList.remove("active"));
      document.getElementById(tab.dataset.tab).classList.add("active");
      tab.classList.add("active");
    });
  });

  // --- Gallery ---
  const imageInput = document.getElementById("imageInput");
  const galleryContainer = document.getElementById("galleryContainer");
  let galleryImages = JSON.parse(localStorage.getItem("gallery")) || [];

  function renderGallery() {
    galleryContainer.innerHTML = "";
    galleryImages.forEach((src, i) => {
      const img = document.createElement("img");
      img.src = src;
      img.title = "Click to remove";
      img.addEventListener("click", () => {
        galleryImages.splice(i, 1);
        localStorage.setItem("gallery", JSON.stringify(galleryImages));
        renderGallery();
      });
      galleryContainer.appendChild(img);
    });
  }

  imageInput.addEventListener("change", e => {
    const file = e.target.files[0];
    if (!file) return;
    const reader = new FileReader();
    reader.onload = () => {
      galleryImages.push(reader.result);
      localStorage.setItem("gallery", JSON.stringify(galleryImages));
      renderGallery();
    };
    reader.readAsDataURL(file);
  });

  renderGallery();

  // --- Competitions ---
  const compForm = document.getElementById("competitionForm");
  const compListDiv = document.getElementById("competitionList");
  let competitions = JSON.parse(localStorage.getItem("competitions")) || [];

  function renderCompetitions() {
    compListDiv.innerHTML = "";
    competitions.forEach((c, i) => {
      const div = document.createElement("div");
      div.className = "card";
      const span = document.createElement("span");
      span.textContent = `${c.name} ‚Äî ${c.winner} (${c.points} pts)`;
      div.appendChild(span);

      const btnContainer = document.createElement("div");
      const editBtn = document.createElement("button");
      editBtn.textContent = "‚úèÔ∏è";
      editBtn.addEventListener("click", () => editCompetition(i));
      const deleteBtn = document.createElement("button");
      deleteBtn.textContent = "üóëÔ∏è";
      deleteBtn.addEventListener("click", () => deleteCompetition(i));

      btnContainer.appendChild(editBtn);
      btnContainer.appendChild(deleteBtn);
      div.appendChild(btnContainer);
      compListDiv.appendChild(div);
    });
    updateTopScores();
  }

  compForm.addEventListener("submit", e => {
    e.preventDefault();
    const name = document.getElementById("compName").value.trim();
    const winner = document.getElementById("compWinner").value.trim();
    const points = document.getElementById("compPoints").value;
    if (!name || !winner || !points) return;

    const existing = competitions.findIndex(c => c.name === name);
    if (existing >= 0) competitions[existing] = { name, winner, points };
    else competitions.push({ name, winner, points });

    localStorage.setItem("competitions", JSON.stringify(competitions));
    compForm.reset();
    renderCompetitions();
  });

  function editCompetition(i) {
    const c = competitions[i];
    document.getElementById("compName").value = c.name;
    document.getElementById("compWinner").value = c.winner;
    document.getElementById("compPoints").value = c.points;
  }

  function deleteCompetition(i) {
    competitions.splice(i, 1);
    localStorage.setItem("competitions", JSON.stringify(competitions));
    renderCompetitions();
  }

  renderCompetitions();

  // --- Events ---
  const eventForm = document.getElementById("eventForm");
  const eventListDiv = document.getElementById("eventList");
  let events = JSON.parse(localStorage.getItem("events")) || [];

  function renderEvents() {
    eventListDiv.innerHTML = "";
    events.forEach((ev, i) => {
      const div = document.createElement("div");
      div.className = "card";
      const span = document.createElement("span");
      span.textContent = `${ev.name} ‚Äî ${ev.date}`;
      div.appendChild(span);

      const btnContainer = document.createElement("div");
      const editBtn = document.createElement("button");
      editBtn.textContent = "‚úèÔ∏è";
      editBtn.addEventListener("click", () => editEvent(i));
      const deleteBtn = document.createElement("button");
      deleteBtn.textContent = "üóëÔ∏è";
      deleteBtn.addEventListener("click", () => deleteEvent(i));

      btnContainer.appendChild(editBtn);
      btnContainer.appendChild(deleteBtn);
      div.appendChild(btnContainer);
      eventListDiv.appendChild(div);
    });
  }

  eventForm.addEventListener("submit", e => {
    e.preventDefault();
    const name = document.getElementById("eventName").value.trim();
    const date = document.getElementById("eventDate").value;
    if (!name || !date) return;

    const existing = events.findIndex(ev => ev.name === name);
    if (existing >= 0) events[existing] = { name, date };
    else events.push({ name, date });

    localStorage.setItem("events", JSON.stringify(events));
    eventForm.reset();
    renderEvents();
  });

  function editEvent(i) {
    const ev = events[i];
    document.getElementById("eventName").value = ev.name;
    document.getElementById("eventDate").value = ev.date;
  }

  function deleteEvent(i) {
    events.splice(i, 1);
    localStorage.setItem("events", JSON.stringify(events));
    renderEvents();
  }

  renderEvents();

  // --- Top Scores ---
  const topScoresTable = document.querySelector("#topScoresTable tbody");
  function updateTopScores() {
    topScoresTable.innerHTML = "";
    const sorted = [...competitions].sort((a, b) => b.points - a.points);
    sorted.slice(0, 10).forEach(c => {
      const row = document.createElement("tr");
      row.innerHTML = `<td>${c.name}</td><td>${c.winner}</td><td>${c.points}</td>`;
      topScoresTable.appendChild(row);
    });
  }

  updateTopScores();

  // --- Export / Import ---
  const exportBtn = document.getElementById("exportData");
  const importInput = document.getElementById("importData");

  exportBtn.addEventListener("click", () => {
    const data = { gallery: galleryImages, competitions, events };
    const blob = new Blob([JSON.stringify(data, null, 2)], { type: "application/json" });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = "ronttoset_backup.json";
    a.click();
    URL.revokeObjectURL(url);
  });

  importInput.addEventListener("change", e => {
    const file = e.target.files[0];
    if (!file) return;
    const reader = new FileReader();
    reader.onload = () => {
      try {
        const data = JSON.parse(reader.result);
        if (data.gallery && data.competitions && data.events) {
          galleryImages = data.gallery;
          competitions = data.competitions;
          events = data.events;
          localStorage.setItem("gallery", JSON.stringify(galleryImages));
          localStorage.setItem("competitions", JSON.stringify(competitions));
          localStorage.setItem("events", JSON.stringify(events));
          renderGallery();
          renderCompetitions();
          renderEvents();
          alert("‚úÖ Data imported successfully!");
        } else {
          alert("‚ùå Invalid backup file.");
        }
      } catch {
        alert("‚ùå Failed to read file.");
      }
    };
    reader.readAsText(file);
  });
});
